{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setIsSelected","isSelected","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","setQuery","setSelectStatus","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","selectedTodo","useState","user","setUser","useEffect","userId","catch","error","console","log","href","email","name","App","setTodos","selectStatus","getTodosFromApi","callback","a","todosFromApi","Error","visibleTodos","filter","toLowerCase","includes","trim","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f1d2253.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  setIsSelected: (value: boolean) => void;\n  isSelected: boolean,\n  setSelectedTodo: (value: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setIsSelected,\n  isSelected,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setIsSelected(!isSelected);\n                  setSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  query: string,\n  setQuery: (value: string) => void,\n  setSelectStatus: (value: string) => void,\n}\n\nexport const TodoFilter: FC<Props> = ({ query, setQuery, setSelectStatus }) => {\n  const reset = () => {\n    setQuery('');\n    setSelectStatus('all');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setSelectStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo\n  isSelected: boolean,\n  setIsSelected: (value: boolean) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  isSelected,\n  setIsSelected,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser)\n      // eslint-disable-next-line no-console\n      .catch((error) => console.log(error));\n  });\n\n  if (isSelected) {\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!user ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setIsSelected(false)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Completed</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return null;\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isSelected, setIsSelected] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectStatus, setSelectStatus] = useState('all');\n\n  const getTodosFromApi = async (callback: () => Promise<Todo[]>) => {\n    try {\n      const todosFromApi = await callback();\n\n      setTodos(todosFromApi);\n    } catch (error) {\n      throw new Error();\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromApi(getTodos);\n  }, []);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(todos[0]);\n\n  let visibleTodos = todos.filter(todo => (\n    todo.title.toLowerCase().includes(query.toLowerCase().trim())));\n\n  switch (selectStatus) {\n    case 'active':\n      visibleTodos = visibleTodos.filter(todo => (\n        todo.completed === false));\n      break;\n\n    case 'completed':\n      visibleTodos = visibleTodos.filter(todo => (\n        todo.completed === true));\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setSelectStatus={setSelectStatus}\n              />\n            </div>\n\n            {todos.length === 0\n              ? (\n                <Loader />\n              ) : (\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    setIsSelected={setIsSelected}\n                    isSelected={isSelected}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {isSelected && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          isSelected={isSelected}\n          setIsSelected={setIsSelected}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}